// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract EtherConverter {
    address public owner;

    constructor() {
        owner = msg.sender;
    }

    // A function to receive Ether
    receive() external payable {}

    // Function to get the balance in wei
    function getBalanceInWei() public view returns (uint) {
        return address(this).balance;
    }

    // Function to get the balance in ether
    function getBalanceInEther() public view returns (uint) {
        return address(this).balance / 1 ether;
    }

    // Function to get the balance in gwei
    function getBalanceInGwei() public view returns (uint) {
        return address(this).balance / 1 gwei;
    }

    // Function to withdraw Ether (only the owner can withdraw)
    function withdraw() public {
        require(msg.sender == owner, "Only the owner can withdraw");
        payable(owner).transfer(address(this).balance);
    }
}
